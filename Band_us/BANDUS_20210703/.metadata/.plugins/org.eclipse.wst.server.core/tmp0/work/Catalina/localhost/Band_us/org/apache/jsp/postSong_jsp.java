/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2021-07-03 03:56:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class postSong_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\"\r\n");
      out.write("	integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/login.css\">\r\n");
      out.write("<title>음악의 시작, Band us</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navbar.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<header class=\"bg-dark py-2\">\r\n");
      out.write("		<div class=\"container px-5\">\r\n");
      out.write("			<div class=\"row gx-5 justify-content-center\">\r\n");
      out.write("				<div class=\"col-lg-6\">\r\n");
      out.write("					<div class=\"text-center my-5\">\r\n");
      out.write("						<h1\r\n");
      out.write("							class=\"display-5 fw-bolder text-white mb-2 cafe-text text-warning\">Post\r\n");
      out.write("							Song</h1>\r\n");
      out.write("						<h1 class=\"display-5 fw-bolder text-white mb-2 cafe-text\">노래\r\n");
      out.write("							등록</h1>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("	<!-- Features section-->\r\n");
      out.write("	<form method=\"post\" action=\"postSongAction.jsp\" enctype=\"multipart/form-data\">\r\n");
      out.write("	<div class=\"container w-75\">\r\n");
      out.write("		<br>\r\n");
      out.write("\r\n");
      out.write("		<h1 class=\"text-center\">\r\n");
      out.write("			<span class=\"cafe-text\">Song Info</span>\r\n");
      out.write("		</h1>\r\n");
      out.write("		<hr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<h3>◆ Upload Song</h3>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-12\">\r\n");
      out.write("				<div class=\"input-group mb-3\">\r\n");
      out.write("					<div class=\"input-group-prepend\">\r\n");
      out.write("						<span class=\"input-group-text\" id=\"inputGroupFileAddon01\">\r\n");
      out.write("							Song </span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"custom-file\">\r\n");
      out.write("						<input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\"\r\n");
      out.write("							aria-describedby=\"inputGroupFileAddon01\"> <label\r\n");
      out.write("							class=\"custom-file-label\" for=\"inputGroupFile01\" name=\"file1\"> 노래 찾기</label>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-8\">\r\n");
      out.write("				<h3>◆ Song name</h3>\r\n");
      out.write("				<div class=\"short-div\">\r\n");
      out.write("					<div class=\"input-group form-group mr-0\">\r\n");
      out.write("						<div style=\"max-width: 50%;\" class=\"input-group-prepend\">\r\n");
      out.write("							<span style=\"width: 100%;\" class=\"input-group-text\">곡 이름</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<input type=\"text\" class=\"form-control\" name=\"song_name\">\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<h3>◆ Artist name</h3>\r\n");
      out.write("				<div class=\"short-div mt-2\">\r\n");
      out.write("					<div class=\"input-group form-group mr-0\">\r\n");
      out.write("						<div style=\"max-width: 50%;\" class=\"input-group-prepend\">\r\n");
      out.write("							<span style=\"width: 100%;\" class=\"input-group-text\">아티스트</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<input type=\"text\" class=\"form-control\" name=\"artist_name\">\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-4\" style=\"\">\r\n");
      out.write("				<img id=\"preview-image\" src=\"img/postsong_img.jpg\" alt=\"home_1\"\r\n");
      out.write("					class=\"float-right img-thumbnail\" />\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-8\">\r\n");
      out.write("				<h3>◆ Album name</h3>\r\n");
      out.write("				<div class=\"short-div\">\r\n");
      out.write("					<div class=\"input-group form-group mr-0\">\r\n");
      out.write("						<div style=\"max-width: 50%;\" class=\"input-group-prepend\">\r\n");
      out.write("							<span style=\"width: 100%;\" class=\"input-group-text\">앨범명</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<input type=\"text\" class=\"form-control\" name=\"album_name\">\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"col-4 mt-3\">\r\n");
      out.write("				<h5>앨범 사진 선택하기</h5>\r\n");
      out.write("				<input style=\"display: block;\" type=\"file\" id=\"input-image\" name=\"file2\" accept=\"image/png, image/jpeg\">\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-12\">\r\n");
      out.write("				<h3>◆ Comment</h3>\r\n");
      out.write("				<input class=\"DOC_TEXT\" style=\"width: 100%; height: 300px\"\r\n");
      out.write("					placeholder=\"500자 이내로 적어주세요.\" name=\"song_comment\">\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		<button type=\"submit\" class=\"btn btn-warning btn-lg btn-block mt-5\">Post Song</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- Optional JavaScript -->\r\n");
      out.write("	<!-- jQuery first, then Popper.js, then Bootstrap JS -->\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\r\n");
      out.write("		integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\r\n");
      out.write("		integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\r\n");
      out.write("		integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("// 글자수 카운터 \r\n");
      out.write("$('.DOC_TEXT').keyup(function (e){\r\n");
      out.write("    var content = $(this).val();\r\n");
      out.write("    $('#counter').html(\"(\"+content.length+\" / 최대 500자)\");    //글자수 실시간 카운팅\r\n");
      out.write("\r\n");
      out.write("    if (content.length > 500){\r\n");
      out.write("        alert(\"최대 500자까지 입력 가능합니다.\");\r\n");
      out.write("        $(this).val(content.substring(0, 500));\r\n");
      out.write("        $('#counter').html(\"(500 / 최대 500자)\");\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("////////////////////////////////////\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function readImage(input) {\r\n");
      out.write("    // 인풋 태그에 파일이 있는 경우\r\n");
      out.write("    if(input.files && input.files[0]) {\r\n");
      out.write("        // 이미지 파일인지 검사 (생략)\r\n");
      out.write("        // FileReader 인스턴스 생성\r\n");
      out.write("        const reader = new FileReader()\r\n");
      out.write("        // 이미지가 로드가 된 경우\r\n");
      out.write("        reader.onload = e => {\r\n");
      out.write("            const previewImage = document.getElementById(\"preview-image\")\r\n");
      out.write("            previewImage.src = e.target.result\r\n");
      out.write("        }\r\n");
      out.write("        // reader가 이미지 읽도록 하기\r\n");
      out.write("        reader.readAsDataURL(input.files[0])\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("// input file에 change 이벤트 부여\r\n");
      out.write("const inputImage = document.getElementById(\"input-image\")\r\n");
      out.write("inputImage.addEventListener(\"change\", e => {\r\n");
      out.write("    readImage(e.target)\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
